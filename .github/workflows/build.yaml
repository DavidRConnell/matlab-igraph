name: Build

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  checks: write
  contents: write
  pull-requests: write

jobs:
  build-linux:
    name: Build Linux toolbox
    runs-on: ubuntu-latest
    env:
      CC: gcc-10
      CXX: g++-10

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install cmake ninja-build gcc-10 g++-10 libxml2-dev libbison-dev libfl-dev

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Build toolbox
        run: |
          cmake -B build . -G Ninja \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build

      - name: Run tests and generate artifacts
        continue-on-error: true
        run: |
          cd build
          ctest --test-dir . --output-on-failure --parallel $(nproc)

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: build/tests/test_*.xml

      - name: Package dist
        run: |
          cmake --build build --target package

      - name: Package source
        run: cmake --build build --target package_source

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: matlab-igraph-${{ runner.os }}-${{ github.sha }}
          path: build/matlab-igraph_${{ github.ref_name }}*.tar.gz

  build-windows:
    name: Build Windows toolbox
    runs-on: windows-latest
    env:
      matlab-release: R2023b

    defaults:
      run:
        shell:  msys2 {0}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          install: >-
            git
            base-devel
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-libxml2
          update: true
          location: D:\

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          release: ${{ env.matlab-release }}

      # For some reason CMake's findMatlab is not succeeding so explicitly
      # passing the Matlab root. The path depends on the Matlab release so need
      # to keep up-to-date.
      - name: Build toolbox
        run: |
          cmake -B build . \
            -G Ninja \
            -DIGRAPH_OPENMP_SUPPORT=ON \
            -DMatlab_ROOT_DIR="C:/Program Files/MATLAB/${{ env.matlab-release }}" \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build

      - name: Run tests and generate artifacts
        continue-on-error: true
        run: |
          cd build
          ctest --test-dir . --output-on-failure --parallel $(nproc)

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          files: build/tests/test_*.xml

      - name: Package dist
        run: cmake --build build --target package

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: matlab-igraph-${{ runner.os }}-${{ github.sha }}
          path: build/matlab-igraph_${{ github.ref_name }}*.zip

  build-macos:
    name: Build macOS toolbox
    runs-on: macos-latest
    env:
      LLVM_VERSION: "14.0.5"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install dependencies
        run: brew install ninja autoconf automake libtool

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Build toolbox
        run: |
          cmake -B build . -G Ninja \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build

      - name: Run tests and generate artifacts
        continue-on-error: true
        run: |
          cd build
          ctest --test-dir . --output-on-failure --parallel $(sysctl -n hw.ncpu)

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          files: build/tests/test_*.xml

      - name: Package dist
        run: cmake --build build --target package

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: matlab-igraph-${{ runner.os }}-${{ github.sha }}
          path: build/matlab-igraph_${{ github.ref_name }}*.tar.gz

  release:
    name: Release new version
    runs-on: ubuntu-latest
    needs: [ build-linux, build-windows, build-macos ]

    steps:
      - uses: actions/checkout@v4

      - name: Collect OS specific toolboxes
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Extract files
        run: |
          mkdir release
          mv artifacts/matlab-igraph-Linux-${{ github.sha }}/*_source.tar.gz release
          cd artifacts
          tar xf matlab-igraph-Linux-${{ github.sha }}/* --directory matlab-igraph-Linux-${{ github.sha }}
          tar xf matlab-igraph-macOS-${{ github.sha }}/* --directory matlab-igraph-macOS-${{ github.sha }}
          unzip matlab-igraph-Windows-${{ github.sha }}/* -d matlab-igraph-Windows-${{ github.sha }}
          cd ..

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Make toolboxes
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(".github/workflows"), buildAllToolboxes("artifacts", "release", "${{ github.ref_name }}")

      - name: Upload assets to release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
