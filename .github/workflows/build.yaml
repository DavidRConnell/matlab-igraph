name: Build

on:
  - workflow_call

jobs:
  build-linux:
    name: Build Linux toolbox
    runs-on: ubuntu-24.04
    env:
      CC: gcc-10
      CXX: g++-10

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install cmake ninja-build gcc-10 g++-10 libxml2-dev libbison-dev libfl-dev

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Build toolbox
        run: |
          cmake -B build . -G Ninja --install-prefix ${GITHUB_WORKSPACE}/dist \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build
          cmake --install build

      - name: Run tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: dist/matlab-igraph/toolbox;build/tests
          select-by-folder: tests
          test-results-junit: test-results/results.xml

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          check_name: Linux Test Results
          files: test-results/results.xml

      - name: Package dist
        run: |
          cmake --build build --target package

      - name: Package source
        run: cmake --build build --target package_source

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: matlab-igraph-${{ runner.os }}-${{ github.sha }}
          path: build/matlab-igraph_*.tar.gz

  build-windows:
    name: Build Windows toolbox
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            git
            base-devel
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-libxml2
          update: true
          location: D:\

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Build toolbox
        run: |
          cmake -B build . \
            -G Ninja \
            --install-prefix=${GITHUB_WORKSPACE}/dist \
            -DIGRAPH_OPENMP_SUPPORT=ON \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build --config Release
          cmake --install build --config Release

      - name: Run tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: dist/matlab-igraph/toolbox;build/tests
          select-by-folder: tests
          test-results-junit: test-results/results.xml

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/windows@v2
        if: always()
        with:
          check_name: Windows Test Results
          files: test-results/results.xml

      - name: Package dist
        run: cmake --build build --target package

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: matlab-igraph-${{ runner.os }}-${{ github.sha }}
          path: build/matlab-igraph_*.zip

  build-arm-macos:
    name: Build arm macOS toolbox
    runs-on: macos-latest
    env:
      LLVM_VERSION: "14.0.5"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install dependencies
        run: brew install autoconf automake libtool

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Build toolbox
        run: |
          cmake -B build . -G Ninja \
            --install-prefix=${GITHUB_WORKSPACE}/dist \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build
          cmake --install build

      - name: Run tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: dist/matlab-igraph/toolbox;build/tests
          select-by-folder: tests
          test-results-junit: test-results/results.xml

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/macos@v2
        if: always()
        with:
          check_name: macOS Arm Test Results
          files: test-results/results.xml

      - name: Package dist
        run: cmake --build build --target package

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: matlab-igraph-${{ runner.os }}-arm-${{ github.sha }}
          path: build/matlab-igraph_*.tar.gz

  build-intel-macos:
    name: Build intel macOS toolbox
    runs-on: macos-13
    env:
      LLVM_VERSION: "14.0.5"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install dependencies
        run: brew install automake

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Build toolbox
        run: |
          cmake -B build . -G Ninja \
            --install-prefix=${GITHUB_WORKSPACE}/dist \
            -DCMAKE_PACKAGE_VERSION="${{ github.ref_name }}"
          cmake --build build
          cmake --install build

      - name: Run tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: dist/matlab-igraph/toolbox;build/tests
          select-by-folder: tests
          test-results-junit: test-results/results.xml

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/macos@v2
        if: always()
        with:
          check_name: macOS Intel Test Results
          files: test-results/results.xml

      - name: Package dist
        run: cmake --build build --target package

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: matlab-igraph-${{ runner.os }}-intel-${{ github.sha }}
          path: build/matlab-igraph_*.tar.gz

  aggregate-toolboxes:
    name: Combine OS specific files into a single toolbox
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-arm-macos, build-intel-macos]

    steps:
      - uses: actions/checkout@v4

      - name: Collect OS specific toolboxes
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract files
        run: |
          mkdir release
          mv artifacts/matlab-igraph-Linux-${{ github.sha }}/*_source.tar.gz release
          cd artifacts
          tar xf matlab-igraph-Linux-${{ github.sha }}/* --directory matlab-igraph-Linux-${{ github.sha }}
          tar xf matlab-igraph-macOS-arm-${{ github.sha }}/* --directory matlab-igraph-macOS-arm-${{ github.sha }}
          tar xf matlab-igraph-macOS-intel-${{ github.sha }}/* --directory matlab-igraph-macOS-intel-${{ github.sha }}
          unzip matlab-igraph-Windows-${{ github.sha }}/* -d matlab-igraph-Windows-${{ github.sha }}
          cd ..

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Make toolboxes
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(".github/workflows"), buildAllToolboxes("artifacts", "release", "${{ github.ref_name }}")

      - name: Upload toolboxes
        uses: actions/upload-artifact@v4
        with:
          name: matlab-igraph-toolbox-${{ github.sha }}
          path: release/*
