#+TITLE: Installation
#+WEIGHT: 1

{{< callout type="warning" >}}
  At the moment, the make commands likely only work on Linux. It will take a bit of time to figure out how to simplify the installation process on different OSes. This may require changing the build system to autotools or CMake.
{{< /callout >}}

* Getting the source code
The first thing to do is clone the source code with git.
Go to the location you want to store the toolbox and run:

#+begin_src bash
  git clone "https://github.com/davidrconnell/matlab-igraph"
  git submodule init && git submodule update
#+end_src

* Installing the igraph C library
Currently the igraph C library must be compiled from the source tracked as a submodule in this repo.
It may be possible in the future to simplify the installation process by allowing the use of precompiled binaries.
Compiling from the submodule here will ensure the version works well with the toolbox and allows the use of different versions on different branches.

** Preparing for compilation
While ~make~ will handle the igraph compilation for you, you'll still need to obtain igraph's dependencies as declared in [[https://igraph.org/c/html/latest/igraph-Installation.html][igraph's installation instructions]] before continuing.

Specifically you need:
- ~bison~
- ~flex~
- ~libxml2~
It is also recommended, but not required, to have the libraries:
- ~arpack~
- ~blas~
- ~glpk~
- ~gmp~
- ~lapack~
- ~plfit~
* Installing the toolbox
To install the toolbox use ~make all~.
Compilation time can be improved using ~make -j all~ to run the make rules in parallel where possible.

Once the mex files have been compiled, ensure the toolbox is on MATLAB's path. In MATLAB, run ~addpath("path/to/matlab-igraph/toolbox");~.
You'll likely want to run ~savepath;~ as well so the toolbox will remain on MATLAB's path between restarts.
* Upgrading
Every once in awhile you will want to check for a new release by running ~git pull~ in the ~matlab-igraph~ directory.
If this pulled anything new down, rerun the above make commands.
* Compiling the mxIgraph C library
~make mxIgraph~  can be used to exclusively compile the mxIgraph C library.
Since the toolbox does require this library, the above ~make all~ will also compile it.
The only reason to run this command is if all you want is the mxIgraph library and not the toolbox.
* Running tests
The ~make check~ command can be used to run the tests related to this toolbox and ~make check-igraph~ can be used to run the igraph C library's tests.
* Making the docs
To make the docs locally, run ~make docs~, this will export any documentation written using a MATLAB file type to markdown.
Hugo is used to create the documentation site.
To serve the site locally, install Hugo then go into the ~docs~ directory and run ~hugo server~.
